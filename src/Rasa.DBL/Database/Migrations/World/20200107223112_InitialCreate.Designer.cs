// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Rasa.Database;

namespace Rasa.Database.Migrations.World
{
    [DbContext(typeof(WorldContext))]
    [Migration("20200107223112_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Rasa.Structures.ArmorClassEntry", b =>
                {
                    b.Property<int>("ClassId")
                        .HasColumnName("classId")
                        .HasColumnType("int(11)");

                    b.Property<int>("MaxDamageAbsorbed")
                        .HasColumnName("maxDamageAbsorbed")
                        .HasColumnType("int(11)");

                    b.Property<int>("MinDamageAbsorbed")
                        .HasColumnName("minDamageAbsorbed")
                        .HasColumnType("int(11)");

                    b.Property<int>("RegenRate")
                        .HasColumnName("regenRate")
                        .HasColumnType("int(11)");

                    b.ToTable("armorClass");
                });

            modelBuilder.Entity("Rasa.Structures.ArmorTemplateEntry", b =>
                {
                    b.Property<int>("ItemTemplateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("itemTemplateId")
                        .HasColumnType("int(11)");

                    b.Property<int>("ArmorValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("armorValue")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("0");

                    b.HasKey("ItemTemplateId")
                        .HasName("PRIMARY");

                    b.ToTable("itemtemplate_armor");
                });

            modelBuilder.Entity("Rasa.Structures.CreatureActionEntry", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(10) unsigned");

                    b.Property<int>("ActionArgId")
                        .HasColumnName("action_arg_id")
                        .HasColumnType("int(10)");

                    b.Property<int>("ActionId")
                        .HasColumnName("action_id")
                        .HasColumnType("int(10)");

                    b.Property<int>("Cooldown")
                        .HasColumnName("cooldown")
                        .HasColumnType("int(10)");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("description")
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int>("MaxDamage")
                        .HasColumnName("max_damage")
                        .HasColumnType("int(10)");

                    b.Property<int>("MinDamage")
                        .HasColumnName("min_damage")
                        .HasColumnType("int(10)");

                    b.Property<float>("RangeMax")
                        .HasColumnName("range_max")
                        .HasColumnType("float");

                    b.Property<float>("RangeMin")
                        .HasColumnName("range_min")
                        .HasColumnType("float");

                    b.Property<int>("WindupTime")
                        .HasColumnName("windup_time")
                        .HasColumnType("int(10)");

                    b.HasKey("Id");

                    b.ToTable("creature_action");
                });

            modelBuilder.Entity("Rasa.Structures.CreatureAppearanceEntry", b =>
                {
                    b.Property<uint>("Class")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("class_id")
                        .HasColumnType("int(11) unsigned")
                        .HasDefaultValueSql("0");

                    b.Property<uint>("Color")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("color")
                        .HasColumnType("int(11) unsigned")
                        .HasDefaultValueSql("0");

                    b.Property<uint>("CreatureId")
                        .HasColumnName("creature_id")
                        .HasColumnType("int(10) unsigned");

                    b.Property<sbyte>("Slot")
                        .HasColumnName("slot_id")
                        .HasColumnType("tinyint(2)");

                    b.ToTable("creature_appearance");
                });

            modelBuilder.Entity("Rasa.Structures.CreatureStatsEntry", b =>
                {
                    b.Property<uint>("CreatureDbId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("creatureDbId")
                        .HasColumnType("int(10) unsigned")
                        .HasComment("dbId from cratures table");

                    b.Property<uint>("Armor")
                        .HasColumnName("armor")
                        .HasColumnType("int(10) unsigned");

                    b.Property<uint>("Body")
                        .HasColumnName("body")
                        .HasColumnType("int(10) unsigned");

                    b.Property<uint>("Health")
                        .HasColumnName("health")
                        .HasColumnType("int(10) unsigned");

                    b.Property<uint>("Mind")
                        .HasColumnName("mind")
                        .HasColumnType("int(10) unsigned");

                    b.Property<uint>("Spirit")
                        .HasColumnName("spirit")
                        .HasColumnType("int(10) unsigned");

                    b.HasKey("CreatureDbId")
                        .HasName("PRIMARY");

                    b.ToTable("creature_stats");
                });

            modelBuilder.Entity("Rasa.Structures.CreaturesEntry", b =>
                {
                    b.Property<uint>("DbId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dbId")
                        .HasColumnType("int(10) unsigned");

                    b.Property<uint>("Action1")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("action1")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValueSql("0");

                    b.Property<uint>("Action2")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("action2")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValueSql("0");

                    b.Property<uint>("Action3")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("action3")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValueSql("0");

                    b.Property<uint>("Action4")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("action4")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValueSql("0");

                    b.Property<uint>("Action5")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("action5")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValueSql("0");

                    b.Property<uint>("Action6")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("action6")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValueSql("0");

                    b.Property<uint>("Action7")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("action7")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValueSql("0");

                    b.Property<uint>("Action8")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("action8")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValueSql("0");

                    b.Property<uint>("ClassId")
                        .HasColumnName("classId")
                        .HasColumnType("int(10) unsigned");

                    b.Property<string>("Comment")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("comment")
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("''");

                    b.Property<int>("Faction")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("faction")
                        .HasColumnType("int(10)")
                        .HasDefaultValueSql("0");

                    b.Property<int>("Level")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("level")
                        .HasColumnType("int(10)")
                        .HasDefaultValueSql("0");

                    b.Property<int>("MaxHitPoints")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("maxHitPoints")
                        .HasColumnType("int(10)")
                        .HasDefaultValueSql("0");

                    b.Property<int>("NameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("nameId")
                        .HasColumnType("int(10)")
                        .HasDefaultValueSql("0");

                    b.Property<uint>("RunSpeed")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("run_speed")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValueSql("0");

                    b.Property<uint>("WalkSpeed")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("walk_speed")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValueSql("0");

                    b.HasKey("DbId")
                        .HasName("PRIMARY");

                    b.ToTable("creatures");
                });

            modelBuilder.Entity("Rasa.Structures.EntityClassEntry", b =>
                {
                    b.Property<int>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("classId")
                        .HasColumnType("int(11)");

                    b.Property<string>("Augmentations")
                        .IsRequired()
                        .HasColumnName("augList")
                        .HasColumnType("char(11)");

                    b.Property<sbyte>("ClassCollisionRole")
                        .HasColumnName("classCollisionRole")
                        .HasColumnType("tinyint(4)");

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasColumnName("className")
                        .HasColumnType("char(58)");

                    b.Property<int>("MeshId")
                        .HasColumnName("meshId")
                        .HasColumnType("int(11)");

                    b.Property<ulong>("TargetFlag")
                        .HasColumnName("targetFlag")
                        .HasColumnType("bit(1)");

                    b.HasKey("ClassId")
                        .HasName("PRIMARY");

                    b.ToTable("entityClass");
                });

            modelBuilder.Entity("Rasa.Structures.EquipableClassEntry", b =>
                {
                    b.Property<uint>("ClassId")
                        .HasColumnName("classId")
                        .HasColumnType("int(11) unsigned");

                    b.Property<int>("SlotId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("slotId")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("0");

                    b.HasKey("ClassId")
                        .HasName("PRIMARY");

                    b.ToTable("equipableclass");
                });

            modelBuilder.Entity("Rasa.Structures.FootlockerEntry", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int(11) unsigned");

                    b.Property<string>("Comment")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("comment")
                        .HasColumnType("varchar(64)")
                        .HasDefaultValueSql("NULL");

                    b.Property<float>("CoordX")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("coord_x")
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<float>("CoordY")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("coord_y")
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<float>("CoordZ")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("coord_z")
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.Property<uint>("EntityClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("entity_class_id")
                        .HasColumnType("int(11) unsigned")
                        .HasDefaultValueSql("0");

                    b.Property<uint>("MapContextId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("map_context_id")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValueSql("0");

                    b.Property<float>("Orientation")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("orientation")
                        .HasColumnType("float")
                        .HasDefaultValueSql("0");

                    b.HasKey("Id");

                    b.ToTable("footlockers");
                });

            modelBuilder.Entity("Rasa.Structures.ItemClassEntry", b =>
                {
                    b.Property<int>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("classId")
                        .HasColumnType("int(11)");

                    b.Property<int>("DragAudioSetId")
                        .HasColumnName("dragAudioSetId")
                        .HasColumnType("int(11)");

                    b.Property<int>("DropAudioSetId")
                        .HasColumnName("dropAudioSetId")
                        .HasColumnType("int(11)");

                    b.Property<ulong>("HiddenInventoryFlag")
                        .HasColumnName("hiddenInventoryFlag")
                        .HasColumnType("bit(1)");

                    b.Property<int>("InventoryIconStringId")
                        .HasColumnName("inventoryIconStringId")
                        .HasColumnType("mediumint(9)");

                    b.Property<ulong>("IsConsumableFlag")
                        .HasColumnName("isConsumableFlag")
                        .HasColumnType("bit(1)");

                    b.Property<int>("LootValue")
                        .HasColumnName("lootValue")
                        .HasColumnType("mediumint(9)");

                    b.Property<int>("MaxHitPoints")
                        .HasColumnName("maxHitPoints")
                        .HasColumnType("mediumint(9)");

                    b.Property<int>("StackSize")
                        .HasColumnName("stackSize")
                        .HasColumnType("int(11)");

                    b.HasKey("ClassId")
                        .HasName("PRIMARY");

                    b.ToTable("itemClass");
                });

            modelBuilder.Entity("Rasa.Structures.ItemTemplateEntry", b =>
                {
                    b.Property<sbyte>("BoundToCharacterFlag")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("boundToCharacterFlag")
                        .HasColumnType("tinyint(4)")
                        .HasDefaultValueSql("0");

                    b.Property<int>("BuyPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("buyPrice")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("0");

                    b.Property<sbyte>("HasAccountUniqueFlag")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("hasAccountUniqueFlag")
                        .HasColumnType("tinyint(4)")
                        .HasDefaultValueSql("0");

                    b.Property<sbyte>("HasBoEFlag")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("hasBoEFlag")
                        .HasColumnType("tinyint(4)")
                        .HasDefaultValueSql("0");

                    b.Property<sbyte>("HasCharacterUniqueFlag")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("hasCharacterUniqueFlag")
                        .HasColumnType("tinyint(4)")
                        .HasDefaultValueSql("0");

                    b.Property<sbyte>("HasSellableFlag")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("hasSellableFlag")
                        .HasColumnType("tinyint(4)")
                        .HasDefaultValueSql("0");

                    b.Property<sbyte>("InventoryCategory")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("inventoryCategory")
                        .HasColumnType("tinyint(4)")
                        .HasDefaultValueSql("0");

                    b.Property<int>("ItemTemplateId")
                        .HasColumnName("itemTemplateId")
                        .HasColumnType("int(11)");

                    b.Property<sbyte>("NotPlaceableInLockBoxFlag")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("notPlaceableInLockBoxFlag")
                        .HasColumnType("tinyint(4)")
                        .HasDefaultValueSql("0");

                    b.Property<sbyte>("NotTradableFlag")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("notTradableFlag")
                        .HasColumnType("tinyint(4)")
                        .HasDefaultValueSql("0");

                    b.Property<int>("QualityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("qualityId")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("0");

                    b.Property<int>("SellPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("sellPrice")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("0");

                    b.ToTable("itemtemplate");
                });

            modelBuilder.Entity("Rasa.Structures.ItemTemplateItemClassEntry", b =>
                {
                    b.Property<int>("ItemClass")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("itemClassId")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("0");

                    b.Property<int>("ItemTemplateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("itemTemplateId")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("0");

                    b.ToTable("itemtemplate_itemclass");
                });

            modelBuilder.Entity("Rasa.Structures.ItemTemplateRaceRequirementEntry", b =>
                {
                    b.Property<int>("ItemTemplateId")
                        .HasColumnName("itemTemplateId")
                        .HasColumnType("int(11)");

                    b.Property<sbyte>("RaceId")
                        .HasColumnName("raceId")
                        .HasColumnType("tinyint(4)");

                    b.ToTable("itemtemplate_racerequirement");
                });

            modelBuilder.Entity("Rasa.Structures.ItemTemplateRequirementsEntry", b =>
                {
                    b.Property<int>("ItemTemplateId")
                        .HasColumnName("itemTemplateId")
                        .HasColumnType("int(11)");

                    b.Property<sbyte>("ReqType")
                        .HasColumnName("reqType")
                        .HasColumnType("tinyint(4)");

                    b.Property<sbyte>("ReqValue")
                        .HasColumnName("reqValue")
                        .HasColumnType("tinyint(4)");

                    b.ToTable("itemtemplate_requirements");
                });

            modelBuilder.Entity("Rasa.Structures.ItemTemplateResistanceEntry", b =>
                {
                    b.Property<int>("ItemTemplateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("itemtemplate_id")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("0");

                    b.Property<sbyte>("ResistanceType")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("resistance_type")
                        .HasColumnType("tinyint(4)")
                        .HasDefaultValueSql("0");

                    b.Property<int>("ResistanceValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("resistance_value")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("0");

                    b.ToTable("itemtemplate_resistance");
                });

            modelBuilder.Entity("Rasa.Structures.ItemTemplateSkillRequirementEntry", b =>
                {
                    b.Property<int>("ItemTemplateId")
                        .HasColumnName("itemTemplateId")
                        .HasColumnType("int(11)");

                    b.Property<sbyte>("SkillId")
                        .HasColumnName("skillId")
                        .HasColumnType("tinyint(4)");

                    b.Property<sbyte>("SkillLevel")
                        .HasColumnName("skillLevel")
                        .HasColumnType("tinyint(4)");

                    b.ToTable("itemtemplate_skillrequirement");
                });

            modelBuilder.Entity("Rasa.Structures.NPCPackagesEntry", b =>
                {
                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnName("comment")
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CreatureDbId")
                        .HasColumnName("creatureDbId")
                        .HasColumnType("int(11)");

                    b.Property<int>("NpcPackageId")
                        .HasColumnName("packageId")
                        .HasColumnType("int(11)");

                    b.ToTable("npc_packages");
                });

            modelBuilder.Entity("Rasa.Structures.NpcMissionEntry", b =>
                {
                    b.Property<int>("Command")
                        .HasColumnName("command")
                        .HasColumnType("int(11)");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnName("comment")
                        .HasColumnType("varchar(50)");

                    b.Property<int>("MissionId")
                        .HasColumnName("missionId")
                        .HasColumnType("int(11)");

                    b.Property<int>("Var1")
                        .HasColumnName("var1")
                        .HasColumnType("int(11)")
                        .HasComment("mission/objective type");

                    b.Property<int>("Var2")
                        .HasColumnName("var2")
                        .HasColumnType("int(11)")
                        .HasComment("mission/objective id");

                    b.Property<int>("Var3")
                        .HasColumnName("var3")
                        .HasColumnType("int(11)");

                    b.ToTable("npc_missions");
                });

            modelBuilder.Entity("Rasa.Structures.PlayerExpForLevelEntry", b =>
                {
                    b.Property<uint>("Level")
                        .HasColumnName("level")
                        .HasColumnType("int(11) unsigned");

                    b.Property<ulong>("Experience")
                        .HasColumnName("experience")
                        .HasColumnType("bigint(20) unsigned");

                    b.HasKey("Level")
                        .HasName("PRIMARY");

                    b.ToTable("player_exp_for_level");
                });

            modelBuilder.Entity("Rasa.Structures.PlayerRandomNameEntry", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("varchar(64)");

                    b.Property<byte>("Type")
                        .HasColumnName("type")
                        .HasColumnType("tinyint(3) unsigned");

                    b.Property<byte>("Gender")
                        .HasColumnName("gender")
                        .HasColumnType("tinyint(3) unsigned");

                    b.HasKey("Name", "Type", "Gender")
                        .HasName("PRIMARY");

                    b.ToTable("player_random_name");
                });

            modelBuilder.Entity("Rasa.Structures.SpawnPoolEntry", b =>
                {
                    b.Property<uint>("DbId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("dbId")
                        .HasColumnType("int(10) unsigned");

                    b.Property<sbyte>("AnimType")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("animType")
                        .HasColumnType("tinyint(2)")
                        .HasDefaultValueSql("0");

                    b.Property<uint>("CreatureId1")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("creatureId1")
                        .HasColumnType("int(11) unsigned")
                        .HasDefaultValueSql("0")
                        .HasComment("dbId from creatures table");

                    b.Property<uint>("CreatureId2")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("creatureId2")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValueSql("0")
                        .HasComment("dbId from creatures table");

                    b.Property<uint>("CreatureId3")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("creatureId3")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValueSql("0")
                        .HasComment("dbId from creatures table");

                    b.Property<uint>("CreatureId4")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("creatureId4")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValueSql("0")
                        .HasComment("dbId from creatures table");

                    b.Property<uint>("CreatureId5")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("creatureId5")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValueSql("0")
                        .HasComment("dbId from creatures table");

                    b.Property<uint>("CreatureId6")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("creatureId6")
                        .HasColumnType("int(10) unsigned")
                        .HasDefaultValueSql("0")
                        .HasComment("dbId from creatures table");

                    b.Property<sbyte>("CreatureMaxCount1")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("creatureMaxCount1")
                        .HasColumnType("tinyint(4)")
                        .HasDefaultValueSql("0");

                    b.Property<sbyte>("CreatureMaxCount2")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("creatureMaxCount2")
                        .HasColumnType("tinyint(4)")
                        .HasDefaultValueSql("0");

                    b.Property<sbyte>("CreatureMaxCount3")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("creatureMaxCount3")
                        .HasColumnType("tinyint(4)")
                        .HasDefaultValueSql("0");

                    b.Property<sbyte>("CreatureMaxCount4")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("creatureMaxCount4")
                        .HasColumnType("tinyint(4)")
                        .HasDefaultValueSql("0");

                    b.Property<sbyte>("CreatureMaxCount5")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("creatureMaxCount5")
                        .HasColumnType("tinyint(4)")
                        .HasDefaultValueSql("0");

                    b.Property<sbyte>("CreatureMaxCount6")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("creatureMaxCount6")
                        .HasColumnType("tinyint(4)")
                        .HasDefaultValueSql("0");

                    b.Property<sbyte>("CreatureMinCount1")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("creatureMinCount1")
                        .HasColumnType("tinyint(4)")
                        .HasDefaultValueSql("0");

                    b.Property<sbyte>("CreatureMinCount2")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("creatureMinCount2")
                        .HasColumnType("tinyint(4)")
                        .HasDefaultValueSql("0");

                    b.Property<sbyte>("CreatureMinCount3")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("creatureMinCount3")
                        .HasColumnType("tinyint(4)")
                        .HasDefaultValueSql("0");

                    b.Property<sbyte>("CreatureMinCount4")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("creatureMinCount4")
                        .HasColumnType("tinyint(4)")
                        .HasDefaultValueSql("0");

                    b.Property<sbyte>("CreatureMinCount5")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("creatureMinCount5")
                        .HasColumnType("tinyint(4)")
                        .HasDefaultValueSql("0");

                    b.Property<sbyte>("CreatureMinCount6")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("creatureMinCount6")
                        .HasColumnType("tinyint(4)")
                        .HasDefaultValueSql("0");

                    b.Property<int>("MapContextId")
                        .HasColumnName("contextId")
                        .HasColumnType("int(5)");

                    b.Property<sbyte>("Mode")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("mode")
                        .HasColumnType("tinyint(2)")
                        .HasDefaultValueSql("0");

                    b.Property<float>("Orientation")
                        .HasColumnName("orientation")
                        .HasColumnType("float");

                    b.Property<float>("PosX")
                        .HasColumnName("posX")
                        .HasColumnType("float");

                    b.Property<float>("PosY")
                        .HasColumnName("posY")
                        .HasColumnType("float");

                    b.Property<float>("PosZ")
                        .HasColumnName("posZ")
                        .HasColumnType("float");

                    b.Property<int>("RespawnTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("respawnTime")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("100")
                        .HasComment("in secounds");

                    b.HasKey("DbId")
                        .HasName("PRIMARY");

                    b.ToTable("spawnpool");
                });

            modelBuilder.Entity("Rasa.Structures.StarterItemsEntry", b =>
                {
                    b.Property<int>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("classId")
                        .HasColumnType("int(11)");

                    b.Property<string>("Comment")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("comment")
                        .HasColumnType("char(50)")
                        .HasDefaultValueSql("NULL");

                    b.Property<int>("ItemTemplateId")
                        .HasColumnName("itemTemplateId")
                        .HasColumnType("int(11)");

                    b.Property<int?>("SlotId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("slotId")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("'20'");

                    b.HasKey("ClassId")
                        .HasName("PRIMARY");

                    b.ToTable("starter_items");
                });

            modelBuilder.Entity("Rasa.Structures.TeleporterEntry", b =>
                {
                    b.Property<uint>("Id")
                        .HasColumnName("id")
                        .HasColumnType("int(11) unsigned");

                    b.Property<float>("CoordX")
                        .HasColumnName("coord_x")
                        .HasColumnType("float");

                    b.Property<float>("CoordY")
                        .HasColumnName("coord_y")
                        .HasColumnType("float");

                    b.Property<float>("CoordZ")
                        .HasColumnName("coord_z")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("description")
                        .HasColumnType("varchar(50)");

                    b.Property<uint>("EntityClassId")
                        .HasColumnName("entity_class_id")
                        .HasColumnType("int(11) unsigned");

                    b.Property<uint>("MapContextId")
                        .HasColumnName("map_context_id")
                        .HasColumnType("int(10) unsigned");

                    b.Property<float>("Orientation")
                        .HasColumnName("orientation")
                        .HasColumnType("float");

                    b.Property<uint>("Type")
                        .HasColumnName("type")
                        .HasColumnType("int(11) unsigned");

                    b.HasKey("Id");

                    b.ToTable("teleporter");
                });

            modelBuilder.Entity("Rasa.Structures.VendorItemsEntry", b =>
                {
                    b.Property<int>("DbId")
                        .HasColumnName("creatureDbId")
                        .HasColumnType("int(11)");

                    b.Property<int>("ItemTemplateId")
                        .HasColumnName("itemTemplateId")
                        .HasColumnType("int(11)");

                    b.ToTable("vendor_items");
                });

            modelBuilder.Entity("Rasa.Structures.VendorsEntry", b =>
                {
                    b.Property<int>("CreatureDbId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("creatureDbId")
                        .HasColumnType("int(11)");

                    b.Property<int>("PackageId")
                        .HasColumnName("packageId")
                        .HasColumnType("int(11)");

                    b.HasKey("CreatureDbId")
                        .HasName("PRIMARY");

                    b.ToTable("vendors");
                });

            modelBuilder.Entity("Rasa.Structures.WeaponClassEntry", b =>
                {
                    b.Property<short>("AmmoClassId")
                        .HasColumnName("ammoClassId")
                        .HasColumnType("smallint(6)");

                    b.Property<int>("ClassId")
                        .HasColumnName("classId")
                        .HasColumnType("int(11)");

                    b.Property<short>("ClipSize")
                        .HasColumnName("clipSize")
                        .HasColumnType("smallint(6)");

                    b.Property<sbyte>("DamageType")
                        .HasColumnName("damageType")
                        .HasColumnType("tinyint(4)");

                    b.Property<sbyte>("DrawActionId")
                        .HasColumnName("drawActionId")
                        .HasColumnType("tinyint(4)");

                    b.Property<int>("MaxDamage")
                        .HasColumnName("maxDamage")
                        .HasColumnType("mediumint(9)");

                    b.Property<int>("MinDamage")
                        .HasColumnName("minDamage")
                        .HasColumnType("mediumint(9)");

                    b.Property<ulong>("RangeType")
                        .HasColumnName("rangeType")
                        .HasColumnType("bit(1)");

                    b.Property<ulong>("RecoveryOverride")
                        .HasColumnName("recoveryOverride")
                        .HasColumnType("bit(1)");

                    b.Property<sbyte>("ReloadActionId")
                        .HasColumnName("reloadActionId")
                        .HasColumnType("tinyint(4)");

                    b.Property<ulong>("ReloadOverride")
                        .HasColumnName("reloadOverride")
                        .HasColumnType("bit(1)");

                    b.Property<ulong>("ReuseOverride")
                        .HasColumnName("reuseOverride")
                        .HasColumnType("bit(1)");

                    b.Property<sbyte>("StowActionId")
                        .HasColumnName("stowActionId")
                        .HasColumnType("tinyint(4)");

                    b.Property<ulong>("UnkArg1")
                        .HasColumnName("unkArg1")
                        .HasColumnType("bit(1)");

                    b.Property<ulong>("UnkArg2")
                        .HasColumnName("unkArg2")
                        .HasColumnType("bit(1)");

                    b.Property<ulong>("UnkArg3")
                        .HasColumnName("unkArg3")
                        .HasColumnType("bit(1)");

                    b.Property<ulong>("UnkArg4")
                        .HasColumnName("unkArg4")
                        .HasColumnType("bit(1)");

                    b.Property<ulong>("UnkArg5")
                        .HasColumnName("unkArg5")
                        .HasColumnType("bit(1)");

                    b.Property<short>("UnkArg6")
                        .HasColumnName("unkArg6")
                        .HasColumnType("smallint(6)");

                    b.Property<ulong>("UnkArg7")
                        .HasColumnName("unkArg7")
                        .HasColumnType("bit(1)");

                    b.Property<sbyte>("UnkArg8")
                        .HasColumnName("unkArg8")
                        .HasColumnType("tinyint(4)");

                    b.Property<sbyte>("Velocity")
                        .HasColumnName("velocity")
                        .HasColumnType("tinyint(4)");

                    b.Property<sbyte>("WeaponAnimConditionCode")
                        .HasColumnName("weaponAnimConditionCode")
                        .HasColumnType("tinyint(4)");

                    b.Property<short>("WeaponAttackActionId")
                        .HasColumnName("weaponAttackActionId")
                        .HasColumnType("smallint(6)");

                    b.Property<short>("WeaponAttackArgId")
                        .HasColumnName("weaponAttackArgId")
                        .HasColumnType("smallint(6)");

                    b.Property<short>("WeaponTemplateid")
                        .HasColumnName("weaponTemplateid")
                        .HasColumnType("smallint(6)");

                    b.Property<ulong>("WindupOverride")
                        .HasColumnName("windupOverride")
                        .HasColumnType("bit(1)");

                    b.ToTable("weaponClass");
                });

            modelBuilder.Entity("Rasa.Structures.WeaponTemplateEntry", b =>
                {
                    b.Property<int>("ItemTemplateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("itemTemplateId")
                        .HasColumnType("int(11)");

                    b.Property<int>("AERadius")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("aeRadius")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("0");

                    b.Property<int>("AEType")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("aeType")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("0");

                    b.Property<double>("AimRate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("aimRate")
                        .HasColumnType("double")
                        .HasDefaultValueSql("0");

                    b.Property<int>("AltAERadius")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("altAERadius")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("0");

                    b.Property<int>("AltAEType")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("altAEType")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("0");

                    b.Property<int>("AltActionArg")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("altActionArg")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("0");

                    b.Property<int>("AltActionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("altActionId")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("0");

                    b.Property<int>("AltDamageType")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("altDamageType")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("0");

                    b.Property<int>("AltMaxDamage")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("altMaxDamage")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("0");

                    b.Property<int>("AltRange")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("altRange")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("0");

                    b.Property<int>("AmmoPerShot")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ammoPerShot")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("0");

                    b.Property<int>("AttackType")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("attackType")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("0");

                    b.Property<int>("CoolRate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("coolRate")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("0");

                    b.Property<double>("HeatPerShot")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("heatPerShot")
                        .HasColumnType("double")
                        .HasDefaultValueSql("0");

                    b.Property<int>("Range")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("range")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("0");

                    b.Property<int>("RecoilAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("recoilAmount")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("0");

                    b.Property<int>("RecoveryTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("recoveryTime")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("0");

                    b.Property<int>("RefireTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("refireTime")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("0");

                    b.Property<int>("ReloadTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("reloadTime")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("0");

                    b.Property<int>("ReuseOverride")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("reuseOverride")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("0");

                    b.Property<int>("ToolType")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("toolType")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("0");

                    b.Property<int>("WindupTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("windupTime")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("0");

                    b.HasKey("ItemTemplateId")
                        .HasName("PRIMARY");

                    b.ToTable("itemtemplate_weapon");
                });
#pragma warning restore 612, 618
        }
    }
}
