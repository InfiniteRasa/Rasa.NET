// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Rasa.Context.Char;

namespace Rasa.Migrations.SqliteChar
{
    [DbContext(typeof(SqliteCharContext))]
    partial class SqliteCharContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Rasa.Structures.Char.CensorWordsEntry", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Word")
                        .IsRequired()
                        .HasColumnType("varchar(45)")
                        .HasColumnName("word");

                    b.HasKey("Id");

                    b.ToTable("censor_words");
                });

            modelBuilder.Entity("Rasa.Structures.Char.CharacterAbilityDrawerEntry", b =>
                {
                    b.Property<uint>("CharacterId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("character_id");

                    b.Property<int>("AbilitySlot")
                        .HasColumnType("INTEGER")
                        .HasColumnName("abilitiy_slot");

                    b.Property<int>("AbilityId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ability_id");

                    b.Property<uint>("AbilityLevel")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ability_level");

                    b.HasKey("CharacterId", "AbilitySlot");

                    b.ToTable("character_ability_drawer");
                });

            modelBuilder.Entity("Rasa.Structures.Char.CharacterAppearanceEntry", b =>
                {
                    b.Property<uint>("CharacterId")
                        .HasColumnType("integer")
                        .HasColumnName("character_id");

                    b.Property<uint>("Slot")
                        .HasColumnType("integer")
                        .HasColumnName("slot");

                    b.Property<uint>("Class")
                        .HasColumnType("int(11)")
                        .HasColumnName("class");

                    b.Property<uint>("Color")
                        .HasColumnType("int(11)")
                        .HasColumnName("color");

                    b.HasKey("CharacterId", "Slot");

                    b.ToTable("character_appearance");
                });

            modelBuilder.Entity("Rasa.Structures.Char.CharacterEntry", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<uint>("AccountId")
                        .HasColumnType("integer")
                        .HasColumnName("account_id");

                    b.Property<byte>("ActiveWeapon")
                        .HasColumnType("INTEGER")
                        .HasColumnName("active_weapon");

                    b.Property<int>("Body")
                        .HasColumnType("int(11)")
                        .HasColumnName("body");

                    b.Property<uint>("Class")
                        .HasColumnType("int(11)")
                        .HasColumnName("class");

                    b.Property<uint>("CloneCredits")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasDefaultValue(0u)
                        .HasColumnName("clone_credits");

                    b.Property<double>("CoordX")
                        .HasColumnType("double")
                        .HasColumnName("coord_x");

                    b.Property<double>("CoordY")
                        .HasColumnType("double")
                        .HasColumnName("coord_y");

                    b.Property<double>("CoordZ")
                        .HasColumnType("double")
                        .HasColumnName("coord_z");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("datetime('now')");

                    b.Property<int>("Credit")
                        .HasColumnType("INTEGER")
                        .HasColumnName("credit");

                    b.Property<byte>("CrouchState")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(3)")
                        .HasDefaultValue((byte)0)
                        .HasColumnName("crouch_state");

                    b.Property<uint>("Experience")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasDefaultValue(0u)
                        .HasColumnName("experience");

                    b.Property<byte>("Gender")
                        .HasColumnType("bit")
                        .HasColumnName("gender");

                    b.Property<DateTime?>("LastLogin")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("last_login")
                        .HasDefaultValueSql("datetime('now')");

                    b.Property<DateTime>("LastPvPClan")
                        .HasColumnType("TEXT")
                        .HasColumnName("last_pvp_clan");

                    b.Property<byte>("Level")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(3)")
                        .HasDefaultValue((byte)1)
                        .HasColumnName("level");

                    b.Property<uint>("MapContextId")
                        .HasColumnType("int(11)")
                        .HasColumnName("map_context_id");

                    b.Property<int>("Mind")
                        .HasColumnType("int(11)")
                        .HasColumnName("mind");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(64)")
                        .HasColumnName("name");

                    b.Property<uint>("NumLogins")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasDefaultValue(0u)
                        .HasColumnName("num_logins");

                    b.Property<int>("Prestige")
                        .HasColumnType("INTEGER")
                        .HasColumnName("prestige");

                    b.Property<byte>("Race")
                        .HasColumnType("tinyint(3)")
                        .HasColumnName("race");

                    b.Property<double>("Rotation")
                        .HasColumnType("double")
                        .HasColumnName("rotation");

                    b.Property<byte>("RunState")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(3)")
                        .HasDefaultValue((byte)1)
                        .HasColumnName("run_state");

                    b.Property<double>("Scale")
                        .HasColumnType("double")
                        .HasColumnName("scale");

                    b.Property<byte>("Slot")
                        .HasColumnType("tinyint(3)")
                        .HasColumnName("slot");

                    b.Property<int>("Spirit")
                        .HasColumnType("int(11)")
                        .HasColumnName("spirit");

                    b.Property<uint>("TotalTimePlayed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasDefaultValue(0u)
                        .HasColumnName("total_time_played");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "AccountId" }, "character_index_account");

                    b.ToTable("character");
                });

            modelBuilder.Entity("Rasa.Structures.Char.CharacterInventoryEntry", b =>
                {
                    b.Property<uint>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("item_id");

                    b.Property<uint>("AccountId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("account_id");

                    b.Property<uint>("CharacterId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("character_id");

                    b.Property<uint>("InventoryType")
                        .HasColumnType("INTEGER")
                        .HasColumnName("invenotry_type");

                    b.Property<uint>("SlotId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("slot_id");

                    b.HasKey("ItemId");

                    b.ToTable("character_inventory");
                });

            modelBuilder.Entity("Rasa.Structures.Char.CharacterLockboxEntry", b =>
                {
                    b.Property<uint>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("account_id");

                    b.Property<int>("Credits")
                        .HasColumnType("INTEGER")
                        .HasColumnName("credits");

                    b.Property<int>("PurashedTabs")
                        .HasColumnType("INTEGER")
                        .HasColumnName("purashed_tabs");

                    b.HasKey("AccountId");

                    b.ToTable("character_lockbox");
                });

            modelBuilder.Entity("Rasa.Structures.Char.CharacterLogosEntry", b =>
                {
                    b.Property<uint>("CharacterId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("character_id");

                    b.Property<uint>("LogosId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("logos_id");

                    b.HasKey("CharacterId", "LogosId");

                    b.ToTable("character_logos");
                });

            modelBuilder.Entity("Rasa.Structures.Char.CharacterMissionEntry", b =>
                {
                    b.Property<uint>("CharacterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("character_id");

                    b.Property<uint>("MissionId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("mission_id");

                    b.Property<uint>("MissionState")
                        .HasColumnType("INTEGER")
                        .HasColumnName("mission_state");

                    b.HasKey("CharacterId");

                    b.ToTable("character_mission");
                });

            modelBuilder.Entity("Rasa.Structures.Char.CharacterOptionEntry", b =>
                {
                    b.Property<uint>("CharacterId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("character_id");

                    b.Property<uint>("OptionId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("option_id");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("value");

                    b.HasKey("CharacterId", "OptionId");

                    b.ToTable("character_option");
                });

            modelBuilder.Entity("Rasa.Structures.Char.CharacterSkillsEntry", b =>
                {
                    b.Property<uint>("CharacterId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("character_id");

                    b.Property<uint>("SkillId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("skill_id");

                    b.Property<int>("AbilityId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ability_id");

                    b.Property<int>("SkillLevel")
                        .HasColumnType("INTEGER")
                        .HasColumnName("skill_level");

                    b.HasKey("CharacterId", "SkillId");

                    b.ToTable("character_skills");
                });

            modelBuilder.Entity("Rasa.Structures.Char.CharacterTeleporterEntry", b =>
                {
                    b.Property<uint>("CharacterId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("character_id");

                    b.Property<uint>("WaypointId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("waypointId");

                    b.HasKey("CharacterId", "WaypointId");

                    b.ToTable("character_teleporter");
                });

            modelBuilder.Entity("Rasa.Structures.Char.CharacterTitleEntry", b =>
                {
                    b.Property<uint>("CharacterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("character_id");

                    b.Property<uint>("TitleId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("title_id");

                    b.HasKey("CharacterId");

                    b.ToTable("character_title");
                });

            modelBuilder.Entity("Rasa.Structures.Char.ClanEntry", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("datetime('now')");

                    b.Property<uint>("Credits")
                        .HasColumnType("INTEGER")
                        .HasColumnName("credits");

                    b.Property<bool>("IsPvP")
                        .HasColumnType("INTEGER")
                        .HasColumnName("is_pvp");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<uint>("Prestige")
                        .HasColumnType("INTEGER")
                        .HasColumnName("prestige");

                    b.Property<uint>("PurashedTabs")
                        .HasColumnType("INTEGER")
                        .HasColumnName("purashed_tabs");

                    b.Property<string>("RankTitle0")
                        .IsRequired()
                        .HasColumnType("varchar(64)")
                        .HasColumnName("rank_title_0");

                    b.Property<string>("RankTitle1")
                        .IsRequired()
                        .HasColumnType("varchar(64)")
                        .HasColumnName("rank_title_1");

                    b.Property<string>("RankTitle2")
                        .IsRequired()
                        .HasColumnType("varchar(64)")
                        .HasColumnName("rank_title_2");

                    b.Property<string>("RankTitle3")
                        .IsRequired()
                        .HasColumnType("varchar(64)")
                        .HasColumnName("rank_title_3");

                    b.HasKey("Id");

                    b.ToTable("clan");
                });

            modelBuilder.Entity("Rasa.Structures.Char.ClanInventoryEntry", b =>
                {
                    b.Property<uint>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("item_id");

                    b.Property<uint>("ClanId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("clan_id");

                    b.Property<uint>("SlotId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("slot_id");

                    b.HasKey("ItemId");

                    b.ToTable("clan_inventory");
                });

            modelBuilder.Entity("Rasa.Structures.Char.ClanMemberEntry", b =>
                {
                    b.Property<uint>("ClanId")
                        .HasColumnType("integer")
                        .HasColumnName("clan_id");

                    b.Property<uint>("CharacterId")
                        .HasColumnType("integer")
                        .HasColumnName("character_id");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("varchar(45)")
                        .HasColumnName("note");

                    b.Property<byte>("Rank")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(3)")
                        .HasDefaultValue((byte)0)
                        .HasColumnName("rank");

                    b.HasKey("ClanId", "CharacterId");

                    b.HasIndex(new[] { "CharacterId" }, "clan_member_index_character")
                        .IsUnique();

                    b.ToTable("clan_member");
                });

            modelBuilder.Entity("Rasa.Structures.Char.FriendEntry", b =>
                {
                    b.Property<uint>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("account_id");

                    b.Property<uint>("FriendAccountId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("friend_account_id");

                    b.HasKey("AccountId");

                    b.ToTable("friend");
                });

            modelBuilder.Entity("Rasa.Structures.Char.GameAccountEntry", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.None);

                    b.Property<bool>("CanSkipBootcamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("can_skip_bootcamp");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("datetime('now')");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("FamilyName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(64)")
                        .HasDefaultValue("")
                        .HasColumnName("family_name");

                    b.Property<string>("LastIp")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(15)")
                        .HasDefaultValue("0.0.0.0")
                        .HasColumnName("last_ip");

                    b.Property<DateTime>("LastLogin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("last_login")
                        .HasDefaultValueSql("datetime('now')");

                    b.Property<byte>("Level")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(3)")
                        .HasDefaultValue((byte)0)
                        .HasColumnName("level");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(64)")
                        .HasColumnName("name");

                    b.Property<byte>("SelectedSlot")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(3)")
                        .HasDefaultValue((byte)0)
                        .HasColumnName("selected_slot");

                    b.HasKey("Id");

                    b.ToTable("account");
                });

            modelBuilder.Entity("Rasa.Structures.Char.IgnoredEntry", b =>
                {
                    b.Property<uint>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("account_id");

                    b.Property<uint>("IgnoredAccountId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ignored_account_id");

                    b.HasKey("AccountId");

                    b.ToTable("ignored");
                });

            modelBuilder.Entity("Rasa.Structures.Char.ItemEntry", b =>
                {
                    b.Property<uint>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("item_id");

                    b.Property<uint>("AmmoCount")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ammo_count");

                    b.Property<uint>("Color")
                        .HasColumnType("INTEGER")
                        .HasColumnName("color");

                    b.Property<string>("CrafterName")
                        .IsRequired()
                        .HasColumnType("varchar(64)")
                        .HasColumnName("crafter_name");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("created_at");

                    b.Property<int>("CurrentHitPoints")
                        .HasColumnType("INTEGER")
                        .HasColumnName("current_hp");

                    b.Property<uint>("ItemTemplateId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("item_template_id");

                    b.Property<uint>("StackSize")
                        .HasColumnType("INTEGER")
                        .HasColumnName("stack_size");

                    b.HasKey("ItemId");

                    b.ToTable("items");
                });

            modelBuilder.Entity("Rasa.Structures.Char.UserOptionEntry", b =>
                {
                    b.Property<uint>("AccountId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("account_id");

                    b.Property<uint>("OptionId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("option_id");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("value");

                    b.HasKey("AccountId", "OptionId");

                    b.ToTable("user_option");
                });

            modelBuilder.Entity("Rasa.Structures.Char.CharacterAppearanceEntry", b =>
                {
                    b.HasOne("Rasa.Structures.Char.CharacterEntry", "Character")
                        .WithMany("CharacterAppearance")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("Rasa.Structures.Char.CharacterEntry", b =>
                {
                    b.HasOne("Rasa.Structures.Char.GameAccountEntry", "GameAccount")
                        .WithMany("Characters")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("GameAccount");
                });

            modelBuilder.Entity("Rasa.Structures.Char.ClanMemberEntry", b =>
                {
                    b.HasOne("Rasa.Structures.Char.CharacterEntry", "Character")
                        .WithOne("MemberOfClan")
                        .HasForeignKey("Rasa.Structures.Char.ClanMemberEntry", "CharacterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Rasa.Structures.Char.ClanEntry", "Clan")
                        .WithMany("Members")
                        .HasForeignKey("ClanId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Clan");
                });

            modelBuilder.Entity("Rasa.Structures.Char.CharacterEntry", b =>
                {
                    b.Navigation("CharacterAppearance");

                    b.Navigation("MemberOfClan");
                });

            modelBuilder.Entity("Rasa.Structures.Char.ClanEntry", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("Rasa.Structures.Char.GameAccountEntry", b =>
                {
                    b.Navigation("Characters");
                });
#pragma warning restore 612, 618
        }
    }
}
